{"version":3,"sources":["../src/options.js","../src/constants.js","../src/create-element.js","../src/component.js","../src/render.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js","node_modules/to-no-case/index.js","node_modules/to-space-case/index.js","node_modules/to-camel-case/index.js","node_modules/to-capital-case/index.js","node_modules/to-snake-case/index.js","node_modules/to-constant-case/index.js","node_modules/to-dot-case/index.js","node_modules/to-pascal-case/index.js","node_modules/to-sentence-case/index.js","node_modules/to-slug-case/index.js","node_modules/escape-regexp-component/index.js","node_modules/title-case-minors/index.js","node_modules/to-title-case/index.js","node_modules/to-case/lib/cases.js","node_modules/to-case/lib/index.js","js/components/Output/index.jsx","js/app.jsx","js/index.jsx"],"names":["options","const","isValidElement","q","defer","prevDebounce","IS_HYDRATE","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","createRef","Fragment","coerceToVNode","possibleVNode","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","_dirty","debounceRendering","process","p","component","mounts","newDom","oldDom","parentDom","force","sort","a","b","_vnode","pop","_parentDom","_force","diff","_context","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","isSvg","excessDomChildren","isHydrating","j","oldVNode","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","undefined","outer","appendChild","nextSibling","insertBefore","value","unmount","applyRef","callback","flattened","Array","isArray","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","s","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","this","event","newVNode","tmp","isNew","oldState","snapshot","clearProcessingException","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","_render","getChildContext","getSnapshotBeforeUpdate","call","componentDidUpdate","diffElementNodes","diffed","_catchError","root","_commit","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","_root","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","subs","_props","some","old","splice","setState","update","forceUpdate","Promise","then","bind","resolve","setTimeout","error","getDerivedStateFromError","componentDidCatch","copy","target","select","execCommand","Input","placeholder","readSearchRequest","searchParams","URLSearchParams","window","location","search","from","keys","updateSearchRequest","url","pathname","history","pushState","App","converters","fn","to","camel","capital","constant","dot","inverse","lower","pascal","sentence","slug","snake","space","title","upper","updateValue","map","querySelector"],"mappings":"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","file":"js.d482eb51.js","sourceRoot":"..","sourcesContent":["/** @type {import('./internal').Options}  */\nconst options = {};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref!=null) delete props.ref;\n\tif (key!=null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode => vnode!=null && vnode.constructor === undefined;\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode | null}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, possibleVNode, null, null);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null || possibleVNode._component!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._processingException = null; // Always read, set only when handling error\n\t// this._pendingError = null; // Always read, set only when handling error. This is used to indicate at diffTime to set _processingException\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tthis._force = false;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tthis._force = true;\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} c The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom,\n\t\tforce = component._force;\n\tcomponent._force = false;\n\tif (parentDom) {\n\t\tlet mounts = [];\n\t\tlet newDom = diff(parentDom, vnode, assign({}, vnode), component._context, parentDom.ownerSVGElement!==undefined, null, mounts, force, oldDom == null ? getDomSibling(vnode) : oldDom);\n\t\tcommitRoot(mounts, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce = options.debounceRendering;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif ((!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t    (prevDebounce !== options.debounceRendering)) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating ? null : replaceNode && replaceNode._children || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiff(\n\t\tparentDom,\n\t\tisHydrating ? parentDom._children = vnode : (replaceNode || parentDom)._children = vnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tmounts,\n\t\tfalse,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating,\n\t);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (props.value !== _props.value) {\n\t\t\t\t\t\tctx[context._id].props.value = _props.value;\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\t// Check if still mounted\n\t\t\t\t\t\t\tif (c._parentDom) {\n\t\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.sub = (c) => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { coerceToVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, oldDom, isHydrating) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t}\n\t\telse if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t}\n\t\telse {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti=0;\n\tnewParentVNode._children = toChildArray(newParentVNode._children, childVNode => {\n\n\t\tif (childVNode!=null) {\n\t\t\tchildVNode._parent = newParentVNode;\n\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\tif (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, null, oldDom, isHydrating);\n\n\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t(refs || (refs=[])).push(j, childVNode._component || newDom, childVNode);\n\t\t\t}\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t}\n\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\tfor (sibDom=oldDom, j=0; (sibDom=sibDom.nextSibling) && j<oldChildrenLength; j+=2) {\n\t\t\t\t\t\t\tif (sibDom==newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t// updated properly.\n\t\t\t\t\t//\n\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t// only a single DOM node\n\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t\treturn childVNode;\n\t});\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren!=null && typeof newParentVNode.type !== 'function') for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], oldChildren[i]);\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {import('../internal').VNode[]} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(callback ? callback(coerceToVNode(children)) : children);\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif ((!hydrate || typeof newProps[i]=='function') && i!=='value' && i!=='checked' && oldProps[i]!==newProps[i]) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t}\n\telse {\n\t\tstyle[key] = typeof value==='number' && IS_NON_DIMENSIONAL.test(key)===false ? value+'px' : value==null ? '' : value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tname = isSvg ? (name==='className' ? 'class' : name) : (name==='class' ? 'className' : name);\n\n\tif (name==='key' || name === 'children') {}\n\telse if (name==='style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) for (let i in oldValue) {\n\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) for (let i in value) {\n\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t}\n\telse if (\n\t\tname!=='list'\n\t\t&& name!=='tagName'\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\t&& name!=='form'\n\t\t&& !isSvg\n\t\t&& (name in dom)\n\t) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (typeof value!=='function' && name!=='dangerouslySetInnerHTML') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value==null || value===false) {\n\t\t\t\tdom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\t}\n\t\t}\n\t\telse if (value==null || value===false) {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t\telse {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, force, oldDom, isHydrating) {\n\tlet tmp, newType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif (tmp = options._diff) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType==='function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp ? (provider ? provider.props.value : tmp._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newProps, c._nextState));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newProps, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldDom!=null ? oldDom!==oldVNode._dom ? oldDom : oldVNode._dom : null;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) newVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (tmp = options._render) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = toChildArray(isTopLevelFragment ? tmp.props.children : tmp);\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, oldDom, isHydrating);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\twhile (tmp=c._renderCallbacks.pop()) {\n\t\t\t\tif (c._nextState) { c.state = c._nextState; }\n\t\t\t\ttmp.call(c);\n\t\t\t}\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, isHydrating);\n\t\t}\n\n\t\tif (tmp = options.diffed) tmp(newVNode);\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n\n\tif (options._commit) options._commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, isHydrating) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tif (newVNode.type===null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif (oldProps !== newProps) {\n\t\t\tif (excessDomChildren!=null) excessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\t\tdom.data = newProps;\n\t\t}\n\t}\n\telse if (newVNode!==oldVNode) {\n\t\tif (excessDomChildren!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, EMPTY_OBJ, isHydrating);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (('value' in newProps) && newProps.value!==undefined && newProps.value !== dom.value) dom.value = newProps.value==null ? '' : newProps.value;\n\t\t\tif (('checked' in newProps) && newProps.checked!==undefined && newProps.checked !== dom.checked) dom.checked = newProps.checked;\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} oldVNode The oldVNode of the vnode\n * that threw, if this VNode threw while diffing\n */\n(options)._catchError = function (error, vnode, oldVNode) {\n\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; vnode = vnode._parent;) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor && component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n};\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, props.key || vnode.key, props.ref || vnode.ref);\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCapitalCase\n\n/**\n * Convert a `string` to capital case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCapitalCase(string) {\n  return space(string).replace(/(^|\\s)(\\w)/g, function (matches, previous, letter) {\n    return previous + letter.toUpperCase()\n  })\n}\n","\nvar toSpace = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSnakeCase\n\n/**\n * Convert a `string` to snake case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSnakeCase(string) {\n  return toSpace(string).replace(/\\s/g, '_')\n}\n","\nvar snake = require('to-snake-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toConstantCase\n\n/**\n * Convert a `string` to constant case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toConstantCase(string) {\n  return snake(string).toUpperCase()\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toDotCase\n\n/**\n * Convert a `string` to slug case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toDotCase(string) {\n  return space(string).replace(/\\s/g, '.')\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toPascalCase\n\n/**\n * Convert a `string` to pascal case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toPascalCase(string) {\n  return space(string).replace(/(?:^|\\s)(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSentenceCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSentenceCase(string) {\n  return clean(string).replace(/[a-z]/i, function (letter) {\n    return letter.toUpperCase()\n  }).trim()\n}\n","\nvar toSpace = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSlugCase\n\n/**\n * Convert a `string` to slug case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSlugCase(string) {\n  return toSpace(string).replace(/\\s/g, '-')\n}\n","\n/**\n * Escape regexp special characters in `str`.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return String(str).replace(/([.*+?=^!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n};","\nmodule.exports = [\n  'a',\n  'an',\n  'and',\n  'as',\n  'at',\n  'but',\n  'by',\n  'en',\n  'for',\n  'from',\n  'how',\n  'if',\n  'in',\n  'neither',\n  'nor',\n  'of',\n  'on',\n  'only',\n  'onto',\n  'out',\n  'or',\n  'per',\n  'so',\n  'than',\n  'that',\n  'the',\n  'to',\n  'until',\n  'up',\n  'upon',\n  'v',\n  'v.',\n  'versus',\n  'vs',\n  'vs.',\n  'via',\n  'when',\n  'with',\n  'without',\n  'yet'\n]\n","\nvar sentence = require('to-sentence-case')\nvar escape = require('escape-regexp-component')\nvar minors = require('title-case-minors')\n\n/**\n * Export.\n */\n\nmodule.exports = toTitleCase\n\n/**\n * Matchers.\n */\n\nvar escaped = minors.map(escape)\nvar minorMatcher = new RegExp('[^^]\\\\b(' + escaped.join('|') + ')\\\\b', 'ig')\nvar punctuationMatcher = /:\\s*(\\w)/g\n\n/**\n * Convert a `string` to title case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toTitleCase(string) {\n  return sentence(string)\n    .replace(/(^|\\s)(\\w)/g, function (matches, previous, letter) {\n      return previous + letter.toUpperCase()\n    })\n    .replace(minorMatcher, function (minor) {\n      return minor.toLowerCase()\n    })\n    .replace(punctuationMatcher, function (letter) {\n      return letter.toUpperCase()\n    })\n}\n","\nvar camel = require('to-camel-case')\nvar capital = require('to-capital-case')\nvar constant = require('to-constant-case')\nvar dot = require('to-dot-case')\nvar none = require('to-no-case')\nvar pascal = require('to-pascal-case')\nvar sentence = require('to-sentence-case')\nvar slug = require('to-slug-case')\nvar snake = require('to-snake-case')\nvar space = require('to-space-case')\nvar title = require('to-title-case')\n\n/**\n * Camel.\n */\n\nexports.camel = camel\n\n/**\n * Pascal.\n */\n\nexports.pascal = pascal\n\n/**\n * Dot. Should precede lowercase.\n */\n\nexports.dot = dot\n\n/**\n * Slug. Should precede lowercase.\n */\n\nexports.slug = slug\n\n/**\n * Snake. Should precede lowercase.\n */\n\nexports.snake = snake\n\n/**\n * Space. Should precede lowercase.\n */\n\nexports.space = space\n\n/**\n * Constant. Should precede uppercase.\n */\n\nexports.constant = constant\n\n/**\n * Capital. Should precede sentence and title.\n */\n\nexports.capital = capital\n\n/**\n * Title.\n */\n\nexports.title = title\n\n/**\n * Sentence.\n */\n\nexports.sentence = sentence\n\n/**\n * Convert a `string` to lower case from camel, slug, etc. Different that the\n * usual `toLowerCase` in that it will try to break apart the input first.\n *\n * @param {String} string\n * @return {String}\n */\n\nexports.lower = function (string) {\n  return none(string).toLowerCase()\n}\n\n/**\n * Convert a `string` to upper case from camel, slug, etc. Different that the\n * usual `toUpperCase` in that it will try to break apart the input first.\n *\n * @param {String} string\n * @return {String}\n */\n\nexports.upper = function (string) {\n  return none(string).toUpperCase()\n}\n\n/**\n * Invert each character in a `string` from upper to lower and vice versa.\n *\n * @param {String} string\n * @return {String}\n */\n\nexports.inverse = function (string) {\n  var chars = string.split('')\n  for (var i = 0, char; char = chars[i]; i++) {\n    if (!/[a-z]/i.test(char)) continue\n    var upper = char.toUpperCase()\n    var lower = char.toLowerCase()\n    chars[i] = char == upper ? lower : upper\n  }\n  return chars.join('')\n}\n\n/**\n * None.\n */\n\nexports.none = none\n","\nvar cases = require('./cases')\n\n/**\n * Export `determineCase`.\n */\n\nmodule.exports = exports = determineCase\n\n/**\n * Export `cases`.\n */\n\nexports.cases = cases\n\n/**\n * Determine the case of a `string`.\n *\n * @param {String} string\n * @return {String|Null}\n */\n\nfunction determineCase(string){\n  for (var key in cases) {\n    if (key == 'none') continue\n    var convert = cases[key]\n    if (convert(string) == string) return key\n  }\n  return null\n}\n\n/**\n * Define a case by `name` with a `convert` function.\n *\n * @param {String} name\n * @param {Object} convert\n */\n\nexports.add = function(name, convert){\n  exports[name] = cases[name] = convert\n}\n\n/**\n * Export all the `cases`.\n */\n\nfor (var key in cases) {\n  exports.add(key, cases[key])\n}\n","import {h, Component} from 'preact';\n\nfunction copy({target}) {\n  target.select();\n  document.execCommand('copy');\n}\n\nexport default class Input extends Component {\n  render({value, placeholder}) {\n    return (\n      <input\n        value={value}\n        placeholder={placeholder}\n        onClick={copy}\n        readOnly\n      />\n    );\n  }\n}\n","import {h, Component} from 'preact';\nimport to from 'to-case';\nimport Output from './components/Output/index.jsx';\n\nfunction select({target}) {\n  target.select();\n}\n\nfunction readSearchRequest() {\n  const searchParams = new URLSearchParams(window.location.search);\n  return Array.from(searchParams.keys())[0] || '';\n}\n\nfunction updateSearchRequest(value) {\n  const url = window.location.pathname + '?' + value;\n  window.history.pushState(null, null, url);\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: readSearchRequest()\n    };\n\n    this.converters = [\n      {\n        name: 'camel',\n        fn: value => to.camel(value)\n      },\n      {\n        name: 'capital',\n        fn: value => to.capital(value)\n      },\n      {\n        name: 'constant',\n        fn: value => to.constant(value)\n      },\n      {\n        name: 'dot',\n        fn: value => to.dot(value)\n      },\n      {\n        name: 'inverse',\n        fn: value => to.inverse(value)\n      },\n      {\n        name: 'lower',\n        fn: value => to.lower(value)\n      },\n      {\n        name: 'pascal',\n        fn: value => to.pascal(value)\n      },\n      {\n        name: 'sentence',\n        fn: value => to.sentence(value)\n      },\n      {\n        name: 'slug',\n        fn: value => to.slug(value)\n      },\n      {\n        name: 'snake',\n        fn: value => to.snake(value)\n      },\n      {\n        name: 'space',\n        fn: value => to.space(value)\n      },\n      {\n        name: 'title',\n        fn: value => to.title(value)\n      },\n      {\n        name: 'upper',\n        fn: value => to.upper(value)\n      }\n    ];\n\n    this.updateValue = this.updateValue.bind(this);\n  }\n\n  updateValue({target: {value}}) {\n    updateSearchRequest(value);\n\n    this.setState({\n      value: value,\n    })\n  }\n\n  render(props, {value}) {\n    return (\n      <div>\n        <div className=\"app__input\">\n          <input\n            value={value}\n            onInput={this.updateValue}\n            onClick={select}\n            autoFocus\n          />\n        </div>\n\n        <div className=\"app__output\">\n          {this.converters.map(({name, fn}) => (\n            <Output\n              key={name}\n              value={fn(value)}\n              placeholder={name}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import {h, render} from 'preact';\nimport App from './app.jsx';\n\nrender(<App/>, document.querySelector('#app-container'));\n"]}